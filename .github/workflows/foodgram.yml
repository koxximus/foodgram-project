name: Foodgram

on:
  push:
    tags:
      - 'v*.*'


jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt

    - name: Lint with flake8
      run: flake8 --ignore=F401,E501 --exclude=static,migrations ..

  push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Push to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: koxximus/foodgram
          tag_with_ref: true

  deploy:
    runs-on: ubuntu-latest
    needs: push_to_docker_hub
    steps:
      - uses: actions/checkout@master
      - name: scp needed files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          port: ${{ secrets.PORT }}
          source: "nginx/default.conf, nginx/Dockerfile, docker-compose.yaml"
          target: "."

      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env_sec
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env_sec
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env_sec
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env_sec
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env_sec
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env_sec
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env_sec
            sudo docker-compose pull
            sudo docker-compose down
            sudo docker-compose up -d --no-build --force-recreate

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!